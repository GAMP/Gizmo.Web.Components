@namespace Gizmo.Web.Components
@inherits GizInputBase<TValue>

@typeparam TValue

<CascadingValue Value="@this" IsFixed="true">

    @if (Variant != PickerVariants.Static)
    {
        <div class="@Class @ClassName"
             id="@Id"
             @ref="@Ref">
            <GizInput Label="@Label"
                      IsDisabled="@IsDisabled"
                      IsFullWidth="@IsFullWidth"
                      Width="@Width"
                      HasOutline="@HasOutline"
                      HasShadow="@HasShadow"
                      IsTransparent="@IsTransparent"
                      Size="@Size"
                      IsValid="@IsValid"
                      ValidationMessage="@ValidationMessage"
                      RightSVGIcon="Icons.Calendar"
                      @onclick="OnClickInput">
                <div class="giz-input-wrapper">
                    <input type="text"
                           value="@_text"
                           readonly="@IsReadOnly"
                           disabled="@IsDisabled"
                           @oninput="OnInputHandler"
                           @onclick="OnClickInput" />
                </div>
            </GizInput>

            <Popup @bind-IsOpen="_isOpen"
                   OpenDirection="@(Variant != PickerVariants.Inline ? PopupOpenDirections.None : OpenDirection)"
                   Class="@PopupClassName"
                   Style="@PopupStyleValue">
                <DatePickerBase @ref="_popupContent" TValue="TValue" Value="@Value" ValueChanged="@DatePickerValueChanged" IsFullWidth="@IsFullWidth" ShowTime="@ShowTime" Culture="@Culture" Format="@Format" />
            </Popup>
        </div>
    }
    else
    {
        <DatePickerBase TValue="TValue" @bind-Value="Value" IsFullWidth="@IsFullWidth" Culture="@Culture" Format="@Format" />
    }

</CascadingValue>