@namespace Gizmo.Web.Components
@inherits Gizmo.Web.Components.CustomDOMComponentBase
@typeparam TItemType
@*propogate this component as parent*@
<CascadingValue Value="this" Name="Parent" IsFixed="true">

    <div class="@Class"
         style="@StyleValue">
       
        <div class="@TableContainerClassName" style="position: relative">

            @if (ContextMenu != null)
            {
                <Menu @ref="_contextMenu" IsContextMenu="true" @bind-IsOpen="_isContextMenuOpen" OffsetX="@_clientX" OffsetY="@_clientY">
                    @ContextMenu
                </Menu>
            }

            @if (ShowColumnSelector)
            {
                <Menu CloseOnItemClick="false" Class="column-selector" Direction="ListDirections.Left" OpenDirection="PopupOpenDirections.Cursor">
                    <Activator>
                        <Button Size="ButtonSizes.Small" Variant="ButtonVariants.Text" LeftSVGIcon="Icons.Show"></Button>
                    </Activator>
                    <ChildContent>
                        @foreach (var column in Columns)
                        {
                            if (column.CanChangeVisibility)
                            {
                                <ListItem>
                                    <CheckBox @bind-IsChecked="column.IsVisible">
                                        @column.HeaderTemplate
                                    </CheckBox>
                                </ListItem>
                            }
                        }
                    </ChildContent>
                </Menu>
            }

            <table class="@TableClass @TableClassName"
                   id="@Id"
                   @ref="@Ref"
                   @attributes="@Attributes">

                @*table head*@
                <thead>
                    @*header*@
                    <tr>
                        @if (IsSelectable && (ShowCheckBoxes || !SelectOnClick))
                        {
                            <th>
                                <CheckBox IsChecked="@(_hasSelectedAllItems)" IsTriState="@(_hasSelectedItems && !_hasSelectedAllItems)" IsIndeterminate="@(_hasSelectedItems && !_hasSelectedAllItems)" IsCheckedChanged="@IsCheckedChangedHandler" />
                            </th>
                        }
                        @ChildContent
                    </tr>
                </thead>

                @*table body*@
                <tbody>
                    @if (@IsVirtualized)
                    {
                        @*virtualization enabled*@
                        @if (ItemsProvider != null)
                        {
                            <Virtualize TItem="@TItemType"
                                        Context="dataItem"
                                        ItemSize="@ItemSize"
                                        OverscanCount="@OverscanCount"
                                        ItemsProvider="@ItemsProvider">
                                <ItemContent>
                                    <DataGridRow Class="@RowClass" TItemType="@TItemType" Columns="@Columns" IsSelectable="@IsSelectable" IsDropdown="@(DetailTemplate != null)" Item="dataItem" />
                                </ItemContent>
                                <Placeholder>
                                    @PlaceHolderTemplate
                                </Placeholder>
                            </Virtualize>
                        }
                        else
                        {
                            <Virtualize TItem="@TItemType"
                                        Context="dataItem"
                                        ItemSize="@ItemSize"
                                        OverscanCount="@OverscanCount"
                                        Items="@ItemSource">
                                <ItemContent>
                                    <DataGridRow Class="@RowClass" TItemType="@TItemType" Columns="@Columns" IsSelectable="@IsSelectable" IsDropdown="@(DetailTemplate != null)" Item="dataItem" />
                                </ItemContent>
                                <Placeholder>
                                    @PlaceHolderTemplate
                                </Placeholder>
                            </Virtualize>
                        }
                    }
                    else
                    {
                        @*virtualization disabled*@
                        @if (ItemSource != null)
                        {
                            @foreach (var dataItem in GetSortedData())
                            {
                                <DataGridRow Class="@RowClass" TItemType="@TItemType" Columns="@Columns" IsSelectable="@IsSelectable" IsDropdown="@(DetailTemplate != null)" Item="dataItem" />
                            }
                        }
                    }
                </tbody>

            </table>

        </div>

    </div>

</CascadingValue>